---
import HeaderUnderline from "../HeaderUnderline.astro";
import Paragraph from "../Paragraph.astro";
import IconBrandGithub from "../icons/IconBrandGithub";

type Project = {
  owner: string;
  repo: string;
  link: string;
  description?: string;
  image: string;
  website?: string;
  language: string;
  languageColor: string;
  stars: number | string;
  forks: number;
};

const projects: Project[] = await fetch(
  "https://gh-pinned.vercel.app/api/user/ryanharman"
)
  .then((res) => res.json())
  .then((res: Project[]) =>
    res.sort((a, b) => Number(a.stars) - Number(b.stars))
  )
  // Sort for projects with websites first
  .then((res: Project[]) =>
    res.sort((a, b) => {
      if (a.website) return -1;
      if (b.website) return 1;
      return 0;
    })
  )
  .catch(() => []);
---

<section
  class="relative max-w-6xl w-full flex flex-col gap-4 items-start justify-center m-auto"
>
  <h3 class="text-4xl">Some of my work</h3>
  <HeaderUnderline color="border-blue-400" />
  <div class="max-w-2xl pb-8">
    <Paragraph>
      I love to build things, and I love to share them with the world. Here are
      some of my public projects that I've built.
    </Paragraph>
  </div>
  <div
    class="grid grid-cols-1 md:grid-cols-3 md:w-auto w-full sm:grid-cols-2 gap-8"
  >
    {
      projects?.map((project) => (
        <div class="flex flex-col justify-between gap-4 rounded-md border p-4 border-slate-800 text-slate-400">
          <div>
            <div class="flex items-center justify-between">
              <a
                class={project?.website && "hover:underline"}
                href={project.website}
                target="_blank"
              >
                <h4 class="text-slate-200">{project.repo}</h4>
              </a>

              <a
                href={project?.link}
                target="_blank"
                class="hover:underline hover:text-slate-300"
              >
                <IconBrandGithub />
              </a>
            </div>
            <p class="text-slate-400 font-light">{project.description}</p>
          </div>

          <div class="flex items-center justify-between font-light text-slate-300">
            {project?.website && (
              <a
                href={project?.website}
                target="_blank"
                class="hover:underline hover:text-slate-100"
              >
                View deployment
              </a>
            )}
            {Number(project.stars) > 0 && (
              <div class="flex items-center gap-1">
                <b>{project.stars}</b> ‚≠ê
              </div>
            )}
          </div>
        </div>
      ))
    }
  </div>
</section>
